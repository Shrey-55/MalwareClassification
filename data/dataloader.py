# data_loader.py
# This file contains functions for loading image datasets using PyTorch.

import os
from torchvision import datasets, transforms
from torch.utils.data import DataLoader

def load_data(data_dir, batch_size=32):
    """
    Load image data using PyTorch's DataLoader.

    Args:
    - data_dir (str): The path to the dataset directory.
    - batch_size (int): Batch size for the DataLoader.

    Returns:
    - train_loader (DataLoader): DataLoader for the training data.
    - val_loader (DataLoader): DataLoader for the validation data.
    """
    # Define transformations for training and validation data
    transform = transforms.Compose([
        transforms.Resize((224, 224)),
        transforms.ToTensor(),
        transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
    ])
    
    # Load datasets
    train_dataset = datasets.ImageFolder(os.path.join(data_dir, 'train'), transform=transform)
    val_dataset = datasets.ImageFolder(os.path.join(data_dir, 'val'), transform=transform)
    
    # Create DataLoader
    train_loader = DataLoader(train_dataset, batch_size=batch_size, shuffle=True)
    val_loader = DataLoader(val_dataset, batch_size=batch_size, shuffle=False)

    return train_loader, val_loader
