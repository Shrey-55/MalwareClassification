# preprocess.py
# This file contains functions for preprocessing image data and labels.

import torch
from torchvision import transforms

def scale_images():
    """
    Return the transformation pipeline for image scaling and normalization.

    Images are resized to (224, 224) and normalized to match the pre-trained LeViT model.

    Returns:
    - transform (torchvision.transforms.Compose): Transformation pipeline.
    """
    transform = transforms.Compose([
        transforms.Resize((224, 224)),  # Resize images to match the input size for LeViT
        transforms.ToTensor(),  # Convert images to PyTorch tensors
        transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])  # Normalize using ImageNet stats
    ])
    return transform

def encode_labels(labels, class_to_idx):
    """
    Encode string labels into numerical format based on class indices.

    Args:
    - labels (list of str): List of string labels.
    - class_to_idx (dict): Dictionary mapping class names to indices.

    Returns:
    - encoded_labels (list of int): List of encoded labels.
    """
    return [class_to_idx[label] for label in labels]

def decode_predictions(predictions, idx_to_class):
    """
    Decode numerical predictions back into string labels.

    Args:
    - predictions (list of int): List of predicted class indices.
    - idx_to_class (dict): Dictionary mapping indices to class names.

    Returns:
    - decoded_preds (list of str): List of decoded class names.
    """
    return [idx_to_class[pred] for pred in predictions]
