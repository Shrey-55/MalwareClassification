# model.py
# This file contains the model architecture definition for LeViT using PyTorch.

import torch
import torch.nn as nn
from transformers import LevitModel, LevitConfig

def build_model(num_classes):
    """
    Build and return the LeViT model for image classification.

    Args:
    - num_classes (int): The number of output classes.

    Returns:
    - model (nn.Module): The LeViT model.
    """
    # Load pre-trained LeViT model configuration
    config = LevitConfig.from_pretrained('facebook/levit-128S')
    
    # Modify configuration for number of classes
    config.num_labels = num_classes

    # Create LeViT model
    model = LevitModel(config)
    
    # Add classification layer
    classifier = nn.Sequential(
        nn.Linear(config.hidden_size, 256),
        nn.ReLU(),
        nn.Dropout(0.5),
        nn.Linear(256, num_classes)
    )
    
    # Return the model with classification layer
    return nn.Sequential(model, classifier)
